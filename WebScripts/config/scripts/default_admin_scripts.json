{
	"scripts": {
		"add_user.py": "config_add_user",
		"add_group.py": "config_add_group",
		"view_users.py": "config_view_users",
		"get_apikey.py": "config_get_apikey",
		"view_groups.py": "config_view_groups",
		"delete_user.py": "config_delete_user",
		"delete_group.py": "config_delete_group",
		"api_view_users.py": "config_api_view_users",
		"api_view_groups.py": "config_api_view_groups",
		"change_user_password.py": "config_change_user_password",
		"my_user_informations.py": "config_my_user_informations"
	},
	"config_change_user_password": {
		"timeout": 15,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"category": "Administration",
		"args": "args_change_user_password",
		"description": "This script reset a user password (for admin only)",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/change_user_password.py"
	},
	"args_change_user_password": {
		"user_id": "arg_id",
		"password": "arg_password"
	},
	"config_delete_user": {
		"timeout": 15,
		"access_users": [],
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"content_type": "text/plain",
		"category": "Administration",
		"args": "config_delete_user_args",
		"documentation_content_type": "text/html",
		"path": "./scripts/account/delete_user.py",
		"documentation_file": "./doc/delete_user.html",
		"description": "This script delete user from ID.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\""
	},
	"config_delete_user_args": {
		"id": "arg_id"
	},
	"arg_id": {
		"list": false,
		"input": false,
		"example": "55",
		"html_type": "number",
		"default_value": null,
		"predefined_values": null,
		"description": "User ID (must be unique)"
	},
	"config_add_user": {
		"timeout": 15,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"content_type": "text/plain",
		"category": "Administration",
		"args": "config_add_user_args",
		"description": "This script add a new user.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/add_user.py"
	},
	"config_add_user_args": {
		"username": "arg_username",
		"password": "arg_password",
		"--ips": "arg_ips",
		"--groups": "arg_group_ids",
		"--group-names": "arg_group_names",
		"--categories": "arg_categories",
		"--scripts": "arg_scripts"
	},
	"arg_username": {
		"list": false,
		"example": "user",
		"html_type": "text",
		"description": "Username for user (must be unique)"
	},
	"arg_group_ids": {
		"list": true,
		"example": "50",
		"html_type": "number",
		"description": "List of groups IDs to add permissions to the new user."
	},
	"arg_group_names": {
		"list": true,
		"example": "User",
		"description": "List of groups names to add permissions to the new user."
	},
	"arg_ips": {
		"list": true,
		"html_type": "text",
		"example": "127.0.*",
		"description": "List of glob syntax for authorized IPs."
	},
	"arg_password": {
		"example": "password",
		"html_type": "password",
		"description": "The user password"
	},
	"arg_scripts": {
		"list": true,
		"is_advanced": true,
		"example": "antivirus*.py",
		"description": "List of glob syntax for authorized scripts."
	},
	"arg_categories": {
		"list": true,
		"is_advanced": true,
		"example": "Admin*",
		"description": "List of glob syntax for authorized categories."
	},
	"config_view_users": {
		"timeout": 15,
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"args": "view_users_args",
		"content_type": "text/csv",
		"category": "Administration",
		"description": "This script list all users to get names, IDs and groups (access level).",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/view_users.py"
	},
	"config_api_view_users": {
		"timeout": 15,
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"args": "view_users_args",
		"content_type": "text/json",
		"category": "Administration",
		"description": "This script list all users to get names, IDs and groups (access level).",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/api_view_users.py"
	},
	"view_users_args": {
		"--ids": "arg_ids",
		"--names": "arg_names"
	},
	"arg_ids": {
		"list": true,
		"example": "5",
		"html_type": "number",
		"description": "List of IDs to display them only."
	},
	"arg_names": {
		"list": true,
		"example": "user",
		"html_type": "text",
		"description": "List of names to display them only."
	},
	"config_add_group": {
		"timeout": 15,
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"args": "add_group_args",
		"category": "Administration",
		"description": "This script can add group (to define new access level).",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/add_group.py"
	},
	"add_group_args": {
		"name": "arg_group_name",
		"access_level": "arg_group_level"
	},
	"arg_group_level": {
		"example": "group",
		"html_type": "text",
		"description": "Name of the new group (must be unique)."
	},
	"arg_group_name": {
		"example": "1000",
		"html_type": "number",
		"description": "Level of the new group (must be unique)."
	},
	"config_delete_group": {
		"timeout": 15,
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"args": "delete_group_args",
		"category": "Administration",
		"description": "This script can delete group from ID.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/delete_group.py"
	},
	"delete_group_args": {
		"ID": "arg_group_id"
	},
	"arg_group_id": {
		"example": "5",
		"html_type": "number",
		"description": "Group ID to delete (you can get it with view_groups)."
	},
	"config_view_groups": {
		"timeout": 15,
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"args": "view_groups_args",
		"content_type": "text/csv",
		"category": "Administration",
		"description": "This script list all groups to get IDs, access level and names.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/view_groups.py"
	},
	"config_api_view_groups": {
		"timeout": 15,
		"no_password": true,
		"launcher": "/usr/bin/python3",
		"access_groups": [
			1000
		],
		"args": "view_groups_args",
		"content_type": "text/json",
		"category": "Administration",
		"description": "This script lists all groups to get IDs, access level and names.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/api_view_groups.py"
	},
	"view_groups_args": {
		"--ids": "arg_ids",
		"--names": "arg_names"
	},
	"config_get_apikey": {
		"timeout": 15,
		"minimum_access": 50,
		"launcher": "/usr/bin/python3",
		"category": "My Account",
		"args": "args_get_apikey",
		"description": "This script prints the API key of the current user.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/get_apikey.py"
	},
	"args_get_apikey": {
		"password": "arg_password"
	},
	"config_my_user_informations": {
		"timeout": 15,
		"no_password": true,
		"minimum_access": 50,
		"launcher": "/usr/bin/python3",
		"category": "My Account",
		"description": "This script prints user informations.",
		"command_generate_documentation": "python3 \"%(dirname)s/../doc/py_doc.py\" \"%(path)s\"",
		"path": "./scripts/account/my_user_informations.py"
	}
}
